import { Title } from "@solidjs/meta";
import { A, useNavigate } from "@solidjs/router";
import BigCard from "~/components/BigCard/BigCard";
import { getDefaultList, getNearbySupermarkets } from "./api";
import { onMount, createSignal, Show } from "solid-js";
import './main.css'

export default function Home() {
  const navigate = useNavigate();
  const [auto_generated_list, setAutoGeneratedList] = createSignal([])
  const [selectedFilter, setSelectedFilter] = createSignal("All")
  const [nearbySupermarkets, setNearbySupermarkets] = createSignal([])
  const [locationError, setLocationError] = createSignal("")
  const [isLoading, setIsLoading] = createSignal(false)
  const [showMenu, setShowMenu] = createSignal(false)

  /*
  const auto_generated_list = [
    {title: "Lista 1", subtitle: "Lista già pronta", name: "Spesa BBQ", description: "Spesa per la tua grigliata con gli amici", tags: "carne,verdure,salse", color: "red"},
    {title: "Lista 2", subtitle: "Lista già pronta", name: "Spesa Vegana", description: "Spesa economica e super iper vegana!!! ", tags: "verdura,vegana,salutare", color: "green"},
  ]
    */

  onMount(async () => {
    const default_list = await getDefaultList()
    setAutoGeneratedList(default_list)
    
    // Get user's location
    if ("geolocation" in navigator) {
      setIsLoading(true)
      navigator.geolocation.getCurrentPosition(
        async (position) => {
          try {
            const { latitude, longitude } = position.coords;
            const supermarkets = await getNearbySupermarkets(latitude, longitude);
            setNearbySupermarkets(supermarkets);
          } catch (error) {
            setLocationError("Errore nel recupero dei supermercati. Riprova più tardi.");
          } finally {
            setIsLoading(false)
          }
        },
        (error) => {
          console.error("Error getting location:", error);
          setLocationError("Per visualizzare i supermercati più vicini, devi consentire l'accesso alla tua posizione.");
          setIsLoading(false)
        },
        {
          enableHighAccuracy: true,
          timeout: 5000,
          maximumAge: 0
        }
      );
    } else {
      setLocationError("La geolocalizzazione non è supportata dal tuo browser.");
    }
  })

  const handleFilterClick = (filter) => {
    setSelectedFilter(filter)
  }

  const filteredList = () => {
    if (selectedFilter() === "All") {
      return auto_generated_list()
    }
    return auto_generated_list().filter(card => 
      card.tags.some(tag => tag.toLowerCase() === selectedFilter().toLowerCase())
    )
  }

  const toggleMenu = () => {
    setShowMenu(!showMenu())
  }

  const handleLogout = () => {
    // Qui puoi aggiungere la logica per il logout (es. rimuovere token, sessioni, ecc.)
    navigate("/")
  }

  const handleClickOutside = (event) => {
    const menu = document.querySelector('.dropdown-menu')
    const icon = document.querySelector('#carrot-icon-action')
    if (menu && !menu.contains(event.target) && !icon.contains(event.target)) {
      setShowMenu(false)
    }
  }

  onMount(() => {
    document.addEventListener('click', handleClickOutside)
    return () => {
      document.removeEventListener('click', handleClickOutside)
    }
  })

  return (
    <main>
      <header>
        <span className="title">Mangia meglio, spreca meno</span>
        <div className="icon" id="carrot-icon-action" onClick={toggleMenu}>
          <img src="../assets/icons/carrot.svg" alt="" />
        </div>
        <div className={`dropdown-menu ${showMenu() ? 'show' : ''}`}>
          <button className="disabled">
            <i className="fa-solid fa-user"></i>
            Account
          </button>
          <div className="divider"></div>
          <button className="logout" onClick={handleLogout}>
            <i className="fa-solid fa-right-from-bracket"></i>
            Logout
          </button>
        </div>
      </header>

      <div className="list">
        <div className="list-filters">
          <span className="title">Liste già pronte</span>
          <div className="cards-container">
            <div className="cards-slider">
              <button 
                className={`card ${selectedFilter() === "All" ? "sel" : ""}`}
                onClick={() => handleFilterClick("All")}
              >
                All
              </button>
              <button 
                className={`card ${selectedFilter() === "Carne" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Carne")}
              >
                Carne
              </button>
              <button 
                className={`card ${selectedFilter() === "Verdura" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Verdura")}
              >
                Verdura
              </button>
              <button 
                className={`card ${selectedFilter() === "Pasta" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Pasta")}
              >
                Pasta
              </button>
              <button 
                className={`card ${selectedFilter() === "Riso" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Riso")}
              >
                Riso
              </button>
              <button 
                className={`card ${selectedFilter() === "Frutta" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Frutta")}
              >
                Frutta
              </button>
              <button 
                className={`card ${selectedFilter() === "Snack" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Snack")}
              >
                Snack
              </button>
              <button 
                className={`card ${selectedFilter() === "Latticini" ? "sel" : ""}`}
                onClick={() => handleFilterClick("Latticini")}
              >
                Latticini
              </button>
            </div>
          </div>
        </div>

        <div className="big-cards-container">
          <div className="big-cards-slider">
            {!filteredList() ? (
              <div className="error-message" style={{width: "300px"}}>
                <i className="fa-solid fa-exclamation-circle"></i>
                <span>Liste ancora non disponibili...</span>
              </div>
            ) : (
              filteredList().map((big_card, index) => (
                <BigCard
                  id={big_card.id}
                  title="Liste già pronte"
                  subtitle="4 persone" 
                  name={big_card.nome}
                  description={"Durata: " + big_card.durata + " giorni"}
                  tags={big_card.tags}
                  color={['#56BF6E', '#FF7126', '#8B4513', '#CD853F', '#DEB887'][index % 5]}
                />
              ))
            )}
          </div>
        </div>

        <div className="supermarket-container">
          <div className="title">Supermercati più vicini</div>
          {isLoading() ? (
            <div className="loading-message">
              <i className="fa-solid fa-spinner fa-spin"></i>
              <span>Ricerca supermercati nelle vicinanze...</span>
            </div>
          ) : locationError() ? (
            <div className="error-message">
              <i className="fa-solid fa-exclamation-circle"></i>
              <span>{locationError()}</span>
            </div>
          ) : (
            <div className="cards">
              {nearbySupermarkets().slice(0, 5).map((supermarket) => (
                <div className="card" key={supermarket.id}>
                  <div className="icon">
                    <img src={"https://cdn-icons-png.flaticon.com/512/1198/1198361.png"} alt={supermarket.name} />
                  </div>
                  <div className="text">
                    <div className="name">{supermarket.name}</div>
                    <span className="distance">{supermarket.distance}</span>
                  </div>
                  <div className="buttons">
                    <A href={`https://maps.google.com/?q=${supermarket.location.lat},${supermarket.location.lng}`} target="_blank">
                    {/*https://maps.google.com/?q=${supermarket.location.lat},${supermarket.location.lng} */}
                      <i className="fa-solid fa-link"></i>
                    </A>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </main>
  );
}
